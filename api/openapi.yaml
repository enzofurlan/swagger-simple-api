openapi: 3.0.0
info:
  title: OpenAPI Specification for the CMS (Course Management System)
  description: API specification document
  termsOfService: https://github.com/enzofurlan
  contact:
    name: Enzo Furlan
    url: https://github.com/enzofurlan
  license:
    name: MIT
  version: "1.0"
externalDocs:
  description: More information about the CMS API
  url: https://github.com/enzofurlan
servers:
- url: "https://{hostname}:{port}/api/v1"
  description: Production server
- url: "https://{hostname}:{port}/staging/v1"
  description: Development server
  variables:
    hostname:
      default: localhost
    port:
      default: "8080"
      enum:
      - "8080"
      - "8081"
security:
- BasicAuthentication: []
tags:
- name: course
  description: Operations about courses
  externalDocs:
    description: More information about courses
    url: https://github.com/enzofurlan
- name: student
  description: Operations about students
paths:
  /courses:
    summary: Operations about courses
    description: Contains the list of operations on courses
    get:
      tags:
      - course
      summary: Get all the courses
      description: Returns the list of all courses
      operationId: getCourses
      parameters:
      - name: sortBy
        in: query
        description: The sort order
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ../api/courses?sortBy=asc
          default: asc
          enum:
          - asc
          - desc
      responses:
        "200":
          description: Successfully returned all course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "4XX":
          description: Incorrect input
        default:
          description: Success
      x-swagger-router-controller: Course
    post:
      tags:
      - course
      summary: Add a new course
      description: Adds a new course entry to the system and returns the added course
      operationId: addCourse
      requestBody:
        description: The new course to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courses_body'
        required: true
      responses:
        "201":
          description: Successfully added a course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses_body'
      x-swagger-router-controller: Course
  /courses/{courseId}:
    summary: Operations about individual course
    description: Contains the list of operations applied on courses
    get:
      tags:
      - course
      summary: Get a specific course
      description: Returns the course details
      operationId: getCourse
      parameters:
      - name: courseId
        in: path
        description: The unique course id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully returned the course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "4XX":
          description: Bad Request
      x-swagger-router-controller: Course
    put:
      tags:
      - course
      summary: Update an existing course
      description: Updates a course entry and returns the updated course
      operationId: updateCourse
      parameters:
      - name: courseId
        in: path
        description: The unique course id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The course details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "4XX":
          description: Bad Request
      x-swagger-router-controller: Course
    delete:
      tags:
      - course
      summary: Delete a specific course
      description: Removes a course entry from the system
      operationId: deleteCourse
      parameters:
      - name: courseId
        in: path
        description: The unique course id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted the course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "4XX":
          description: Bad Request
      security:
      - BearerAuthentication: []
      x-swagger-router-controller: Course
  /courses/{courseId}/students:
    summary: Operations about students belonging to a course
    description: Contains the list of operations applied on a course's students
    get:
      tags:
      - course
      summary: Get students belonging to a course
      description: Returns the list of all students enrolled in the course
      operationId: getCourseStudents
      parameters:
      - name: courseId
        in: path
        description: The unique course id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully returned all students enrolled in a course
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
                x-content-type: application/json
        "4XX":
          description: Bad Request
        default:
          description: Success
      x-swagger-router-controller: Course
    post:
      tags:
      - course
      summary: Add a student to a course
      description: Adds a new student association to the course and returns the added
        student.
      operationId: addCourseStudent
      parameters:
      - name: courseId
        in: path
        description: The unique course id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The student to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "201":
          description: Student association is added sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "400":
          description: Invalid input.
      x-swagger-router-controller: Course
  /students:
    summary: Operations about Students
    description: Contains the list of operations applied on students
    get:
      tags:
      - student
      summary: Get all the students
      description: Returns the list of all students present in the system
      operationId: getStudents
      responses:
        "200":
          description: Successfully returned all student entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
                x-content-type: application/json
        "4XX":
          description: Bad Request
        "5XX":
          description: Internal server error
      x-swagger-router-controller: Student
    post:
      tags:
      - student
      summary: Add a new student
      description: Adds a new student entry to the system and returns the added student
      operationId: addStudent
      requestBody:
        description: The new student to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "201":
          description: Student entry is added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "4XX":
          description: Bad Request
        "5XX":
          description: Internal server error
        default:
          description: Success
      x-swagger-router-controller: Student
  /students/{studentId}:
    summary: Operations about individual Student
    description: Contains the list of operations applied on students
    get:
      tags:
      - student
      summary: Get a specific student
      description: Returns the student details
      operationId: getStudent
      parameters:
      - name: studentId
        in: path
        description: The unique student id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully returned the student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "4XX":
          description: Bad Request
        "5XX":
          description: Internal server error
      x-swagger-router-controller: Student
    put:
      tags:
      - student
      summary: Update an existing student
      description: Updates a student entry in the system and returns the updated student
      operationId: updateStudent
      parameters:
      - name: studentId
        in: path
        description: The unique student id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The student details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "200":
          description: Student is updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "4XX":
          description: Bad Request
        "5XX":
          description: Internal server error
        default:
          description: Success
      x-swagger-router-controller: Student
    delete:
      tags:
      - student
      summary: Delete a student entry
      description: Removes a student entry from the system
      operationId: deleteStudent
      parameters:
      - name: studentId
        in: path
        description: The unique student id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted
        "4XX":
          description: Bad Request
        "5XX":
          description: Internal server error
        default:
          description: Success
          content:
            application/json:
              examples:
                deleteResponse:
                  value: Successfully deleted
      x-swagger-router-controller: Student
components:
  schemas:
    Course:
      required:
      - courseDuration
      - courseName
      - courseType
      type: object
      properties:
        courseId:
          type: number
          description: Unique ID of the course
        courseName:
          type: string
          description: Name of the course
        courseDuration:
          type: string
          description: Duration of the course in years
        courseType:
          type: string
          enum:
          - Engineering
          - Medical
          - Management
      description: Represents a course entry
      example:
        courseId: 1
        courseName: Computer Science
        courseDuration: 4
        courseType: Engineering
    Student:
      required:
      - firstName
      - lastName
      type: object
      properties:
        studentId:
          type: number
          description: Unique ID of the student
        firstName:
          type: string
          description: Firt name of the student
        lastName:
          type: string
          description: Last name of the student
        phoneNumber:
          type: string
          description: Phone number of the student
        address:
          type: string
          description: Address of the student
      description: Represents a student entry
      example:
        studentId: 101
        firstName: James
        lastName: Smith
        phoneNumber: 555-555-1234
        address: US
    inline_response_200:
      required:
      - courseDuration
      - courseName
      - courseType
      type: object
      properties:
        courseId:
          type: number
          description: Unique ID of the course
        courseName:
          type: string
          description: Name of the course
        courseDuration:
          type: string
          description: Duration of the course in years
        courseType:
          type: string
          enum:
          - Engineering
          - Medical
          - Management
      description: Represents a course entry
      example:
        courseId: 1
        courseName: Computer Science
        courseDuration: "4"
        courseType: Engineering
    courses_body:
      required:
      - courseDuration
      - courseName
      - courseType
      type: object
      properties:
        courseId:
          type: number
          description: Unique ID of the course
        courseName:
          type: string
          description: Name of the course
        courseDuration:
          type: string
          description: Duration of the course in years
        courseType:
          type: string
          enum:
          - Engineering
          - Medical
          - Management
      description: Represents a course entry
      example:
        courseId: 1
        courseName: Computer Science
        courseDuration: 4
        courseType: Engineering
  responses:
    CourseSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
    "4xxResponse":
      description: Bad Request
    "5xxResponse":
      description: Internal server error
    DefaultResponse:
      description: Success
  securitySchemes:
    BasicAuthentication:
      type: http
      scheme: basic
    BearerAuthentication:
      type: http
      scheme: bearer
